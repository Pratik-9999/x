//1st javaFile


import java.util.Arrays; 
import java.util.Scanner; 
 
public class RoundRobin { 
private Scanner sc; 
public void execute() 
{ 
sc = new Scanner(System.in); 
 
//--------FCFS 
System.out.println("Enter Number of Processes:"); 
int numProcess=sc.nextInt(); 
Process []process=new Process[numProcess]; 
 
//Accept Input 
for(int i=0;i<numProcess;i++) 
{ 
System.out.println("P("+(i+1)+"):Enter Arrival time & Burst time"); 
int at=sc.nextInt(); 
int bt=sc.nextInt(); 
//System.out.println("P("+(i+1)+"):Enter Arrival time"); 
 
process[i]=new Process("P"+(i+1), bt, at); 
} 
Arrays.sort(process,new SortByArrival()); //sort according to arrival time 
 
System.out.println("Enter Quantum Time: "); 
int quantum=sc.nextInt(); 
 
double TotalWT=0, TotalTAT=0,avgWT=0,avgTAT=0; 
int time=0; 
System.out.println("Output for the RoundRobin Algorithm:\n\n"); 
System.out.println("\n\nPRNo\tBT\tAT\tCT\tTAT\tWT\tPR"); 
System.out.println("===================================================================
==============="); 
 
while(true) //upto all process completion 
{ 
boolean done=true; 
for(int i=0;i<numProcess;i++) 
{ 
if(process[i].remBT>0 && process[i].AT<=time) 
{ 
done=false; 
 
if(process[i].remBT>quantum) // time remaining :v 2>4 
{ 
time=time+quantum; //0+4=4 
process[i].remBT=process[i].remBT-quantum; //procee[i].rembt=6-4=2 
//System.out.println(i+" TIME "+time); 
 
} 
else //process will finish execution 
{ 
 
time+=process[i].remBT; //4+2=6 
//System.out.println(i+" TIME "+time); 
 
process[i].remBT=0; 
process[i].CT=time;//6 
process[i].TAT=process[i].CT-process[i].AT; 
process[i].WT=process[i].TAT-process[i].BT; 
TotalWT=TotalWT+process[i].WT; 
TotalTAT=TotalTAT+process[i].TAT; 
process[i].display(); 
} 
} 
/*else //no process is arrived currently 
{ 
time++; 
 
}*/ 
 
} 
if(done==true) //done executing all processes 
{ 
break; 
} 
 
} 
System.out.println("Average Turn around time:"+TotalTAT/numProcess); 
System.out.println("Average Waiting time:"+TotalWT/numProcess); 
} 
}
//2nd java File

public class Process {
      public Process(String name, int bT, int aT) {
	
		this.name = name;
		BT = bT;
		AT = aT;
		WT=TAT=CT=remBT=0;
		priority=0;
	}
	String name;
      public Process(String name, int bT, int aT, int priority) {
		
		this.name = name;
		BT = bT;
		AT = aT;
		this.priority = priority;
		WT=TAT=CT=0;
		remBT=BT;
		flag=false;
	}
	int BT,AT,CT,TAT,FT,WT,remBT,priority;
      boolean flag;
      
      public void display()
      {
    	  System.out.println(name+"\t"+BT+"\t"+AT+"\t"+CT+"\t"+TAT+"\t"+WT+"\t"+priority);
    	  
    	  
      }
      
}


//3rd Java file
import java.util.Comparator;

public class SortByArrival implements Comparator<Process>
{

	@Override
	public int compare(Process o1, Process o2) {
		// TODO Auto-generated method stub
		return o1.AT-o2.AT;
	}

}


//4th java file

import java.util.Comparator;
public class SortByPriority implements Comparator<Process>{

	@Override
	public int compare(Process o1, Process o2) {
		
		return o1.priority-o2.priority;
	}



}


